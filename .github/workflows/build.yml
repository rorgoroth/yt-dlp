name: Build
on:
  push:

jobs:
  build_unix:
    runs-on: ubuntu-latest
    outputs:
      version_suffix: ${{ steps.version_suffix.outputs.version_suffix }}
      ytdlp_version: ${{ steps.bump_version.outputs.ytdlp_version }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
          python-version: '3.8'

    - name: Install packages
      run: sudo apt-get -y install zip pandoc man

    - name: Set version suffix
      id: version_suffix
      env:
        PUSH_VERSION_COMMIT: ${{ secrets.PUSH_VERSION_COMMIT }}
      if: "env.PUSH_VERSION_COMMIT == ''"
      run: echo ::set-output name=version_suffix::$(date -u +"%H%M%S")

    - name: Bump version
      id: bump_version
      run: |
        python devscripts/update-version.py ${{ steps.version_suffix.outputs.version_suffix }}
        make issuetemplates

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.bump_version.outputs.ytdlp_version }}
        release_name: yt-dlp ${{ steps.bump_version.outputs.ytdlp_version }}
        commitish: ${{ steps.push_release.outputs.head_sha }}
        body: |
          New Build
        draft: false
        prerelease: false

  build_windows:
    runs-on: windows-latest
    needs: build_unix

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
          python-version: '3.8'

    - name: Install Requirements
      run: |
          python -m pip install --upgrade pip setuptools wheel py2exe
          pip install "https://yt-dlp.github.io/Pyinstaller-Builds/x86_64/pyinstaller-4.5.1-py3-none-any.whl" mutagen pycryptodomex websockets

    - name: Bump version
      id: bump_version
      env:
        version_suffix: ${{ needs.build_unix.outputs.version_suffix }}
      run: python devscripts/update-version.py ${{ env.version_suffix }}

    - name: Build lazy extractors
      id: lazy_extractors
      run: python devscripts/make_lazy_extractors.py

    - name: Run py2exe Script
      run: python setup.py py2exe

    - name: Upload yt-dlp_min.exe Windows binary
      id: upload-release-windows-py2exe
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.build_unix.outputs.upload_url }}
        asset_path: ./dist/yt-dlp.exe
        asset_name: yt-dlp.exe
        asset_content_type: application/vnd.microsoft.portable-executable
